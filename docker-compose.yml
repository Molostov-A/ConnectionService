version: '3.8'

services:
  postgres:
    image: postgres:16
    restart: always
    container_name: postgres_container
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: ConnectionLoggedDb
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - my_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8082:80"
    networks:
      - my_network
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_container
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - my_network
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
  connectionlogger_api:
    build:
      context: .
      dockerfile: src/ConnectionLogger.Api/Dockerfile
    container_name: connectionlogger_api
    ports:
      - "5000:5000"
    restart: "no"
    networks:
      - my_network
    depends_on:
      - postgres
      - rabbitmq
    deploy:
      restart_policy:
        condition: none

  connectionlogger_asyncreceiver:
    build:
      context: .
      dockerfile: src/ConnectionLogger.AsyncReceiver/Dockerfile
    container_name: connectionlogger_asyncreceiver
    networks:
      - my_network
    restart: "no"
    depends_on:
      - rabbitmq
    deploy:
      restart_policy:
        condition: none

volumes:
  pg_data:
  pgadmin_data:
  rabbitmq_data:

networks:
  my_network:
    driver: bridge
